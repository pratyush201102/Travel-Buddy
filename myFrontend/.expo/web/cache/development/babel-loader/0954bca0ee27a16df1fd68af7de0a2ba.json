{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ImagePickerExample() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      console.log(result);\n\n      if (!result.cancelled) {\n        setImage(result.uri);\n      }\n    });\n\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Button, {\n      title: \"Pick one image from camera roll\",\n      onPress: pickImage\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    }), _jsx(Button, {\n      title: \"Pick another image from camera roll\",\n      onPress: pickImage\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","ImagePicker","ImagePickerExample","image","setImage","pickImage","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","console","log","cancelled","uri","flex","alignItems","justifyContent","width","height"],"sources":["C:/Users/kumar/OneDrive - Fisk University/Desktop/HackathonProject/BeFisk/myFrontend/pages/ImageScanning.js"],"sourcesContent":["// import React from \"react\";\r\n// import { ImageBackground, StyleSheet, View, Button } from \"react-native\";\r\n\r\n// const ImageScanning = ({ navigation }) => (\r\n//   <View style={styles.button}>\r\n//     <Button\r\n//       title=\"Upload Image\"\r\n//       color=\"#244D9D\"\r\n//       style={styles.button}\r\n//       onPress={() => navigation.navigate(\"Landing\")}\r\n//     />\r\n//   </View>\r\n// );\r\n\r\n// const styles = StyleSheet.create({\r\n//   button: {\r\n//     marginTop: 580,\r\n//     marginHorizontal: 15,\r\n//     padding: 20,\r\n//   },\r\n// });\r\n\r\n// export default ImageScanning;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button, Image, View, Platform } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nexport default function ImagePickerExample() {\r\n  const [image, setImage] = useState(null);\r\n\r\n  const pickImage = async () => {\r\n    // No permissions request is necessary for launching the image library\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n      <Button title=\"Pick one image from camera roll\" onPress={pickImage} />\r\n      {image && (\r\n        <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n      )}\r\n      <Button title=\"Pick another image from camera roll\" onPress={pickImage} />\r\n      {image && (\r\n        <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;AAwBA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;AAEA,eAAe,SAASC,kBAAT,GAA8B;EAC3C,gBAA0BH,QAAQ,CAAC,IAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,SAAS;IAAA,6BAAG,aAAY;MAE5B,IAAIC,MAAM,SAASL,WAAW,CAACM,uBAAZ,CAAoC;QACrDC,UAAU,EAAEP,WAAW,CAACQ,gBAAZ,CAA6BC,GADY;QAErDC,aAAa,EAAE,IAFsC;QAGrDC,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;QAIrDC,OAAO,EAAE;MAJ4C,CAApC,CAAnB;MAOAC,OAAO,CAACC,GAAR,CAAYT,MAAZ;;MAEA,IAAI,CAACA,MAAM,CAACU,SAAZ,EAAuB;QACrBZ,QAAQ,CAACE,MAAM,CAACW,GAAR,CAAR;MACD;IACF,CAdc;;IAAA,gBAATZ,SAAS;MAAA;IAAA;EAAA,GAAf;;EAgBA,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEa,IAAI,EAAE,CAAR;MAAWC,UAAU,EAAE,QAAvB;MAAiCC,cAAc,EAAE;IAAjD,CAAb;IAAA,WACE,KAAC,MAAD;MAAQ,KAAK,EAAC,iCAAd;MAAgD,OAAO,EAAEf;IAAzD,EADF,EAEGF,KAAK,IACJ,KAAC,KAAD;MAAO,MAAM,EAAE;QAAEc,GAAG,EAAEd;MAAP,CAAf;MAA+B,KAAK,EAAE;QAAEkB,KAAK,EAAE,GAAT;QAAcC,MAAM,EAAE;MAAtB;IAAtC,EAHJ,EAKE,KAAC,MAAD;MAAQ,KAAK,EAAC,qCAAd;MAAoD,OAAO,EAAEjB;IAA7D,EALF,EAMGF,KAAK,IACJ,KAAC,KAAD;MAAO,MAAM,EAAE;QAAEc,GAAG,EAAEd;MAAP,CAAf;MAA+B,KAAK,EAAE;QAAEkB,KAAK,EAAE,GAAT;QAAcC,MAAM,EAAE;MAAtB;IAAtC,EAPJ;EAAA,EADF;AAYD"},"metadata":{},"sourceType":"module"}